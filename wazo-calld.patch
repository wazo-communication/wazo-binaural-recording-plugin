diff --git a/wazo_calld/plugin_helpers/ami.py b/wazo_calld/plugin_helpers/ami.py
index a05d8787..06083ee1 100644
--- a/wazo_calld/plugin_helpers/ami.py
+++ b/wazo_calld/plugin_helpers/ami.py
@@ -1,5 +1,6 @@
-# Copyright 2016-2023 The Wazo Authors  (see the AUTHORS file)
+# Copyright 2016-2024 The Wazo Authors  (see the AUTHORS file)
 # SPDX-License-Identifier: GPL-3.0-or-later
+from __future__ import annotations
 
 import logging
 import re
@@ -123,13 +124,21 @@ def dtmf(amid, channel, digit):
         raise WazoAmidError(amid, e)
 
 
-def record_start(amid, channel, filename, options=None):
+def record_start(
+    amid,
+    channel: str,
+    filename: str,
+    options: str | None = None,
+    command: str | None = None,
+):
     destination = {
         'Channel': channel,
         'File': filename,
     }
     if options:
         destination['options'] = options
+    if command:
+        destination['command'] = command
     try:
         amid.action('MixMonitor', destination)
     except RequestException as e:
diff --git a/wazo_calld/plugins/calls/services.py b/wazo_calld/plugins/calls/services.py
index 2643e472..b54392df 100644
--- a/wazo_calld/plugins/calls/services.py
+++ b/wazo_calld/plugins/calls/services.py
@@ -595,13 +595,40 @@ class CallsService:
         )
 
         try:
-            mix_monitor_options = channel.getChannelVar(
-                variable='WAZO_MIXMONITOR_OPTIONS'
-            )['value']
+            mix_monitor_options = (
+                channel.getChannelVar(variable='WAZO_MIXMONITOR_OPTIONS')['value']
+                or None
+            )
         except ARINotFound:
             mix_monitor_options = None
+        except Exception:
+            logger.exception(
+                "Error getting variable WAZO_MIXMONITOR_OPTIONS from channel %s",
+                channel,
+            )
+            raise
 
-        ami.record_start(self._ami, channel.id, filename, mix_monitor_options or None)
+        try:
+            mixmonitor_command = (
+                channel.getChannelVar(variable='WAZO_MIXMONITOR_COMMAND')['value']
+                or None
+            )
+        except ARINotFound:
+            mixmonitor_command = None
+        except Exception:
+            logger.exception(
+                "Error getting variable WAZO_MIXMONITOR_COMMAND from channel %s",
+                channel,
+            )
+            raise
+
+        ami.record_start(
+            self._ami,
+            channel.id,
+            filename,
+            mix_monitor_options or None,
+            command=mixmonitor_command,
+        )
 
     def record_start_user(self, call_id, user_uuid):
         self._verify_user(call_id, user_uuid)
